// -------------- Generated by Tangsem.Tooling.CodeGen.ApiClient.ApiMethodGen.ApiClientCode() -----------

using CostTracker.Domain.Core.DTOs;

namespace CostTracker.WebApiClient;

using System.Net.Http;
using System.Web;
using Tangsem.WebApiClient.Extensions;

/// <summary>
/// Generated part of CostTrackerApiClient class.
/// </summary>
public partial class CostTrackerApiClient
{
  private readonly HttpClient _hc;

  public CostTrackerApiClient(HttpClient hc)
  {
    this._hc = hc;
  }

  /// <summary>
  /// GetWeatherForecast Async.
  /// </summary>
  public async Task<CostTracker.Domain.Core.DTOs.WeatherForecast[]> GetWeatherForecast_Async()
  {
    var url = $"/weatherforecast";


    return await this._hc.GetAsJson_Async<CostTracker.Domain.Core.DTOs.WeatherForecast[]>(url);
  }

  /// <summary>
  /// GetInvoiceCaptures Async.
  /// </summary>
  public async Task<List<CostTracker.Domain.Core.DTOs.InvoiceCaptureDto>> GetInvoiceCaptures_Async()
  {
    var url = $"/invoice-captures";


    return await this._hc.GetAsJson_Async<List<CostTracker.Domain.Core.DTOs.InvoiceCaptureDto>>(url);
  }

  /// <summary>
  /// AddInvoiceCapture Async.
  /// </summary>
  public async Task<ResponsePayload<Guid>> AddInvoiceCapture_Async(CostTracker.Domain.Core.DTOs.InvoiceCaptureDto dto)
  {
    var url = $"/add-invoice-captures";


    return await this._hc.PostAsJson_Async<ResponsePayload<Guid>>(url, dto);
  }
}